"""
Django settings for zhuican project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import random
import string
import platform

from kombu import Exchange, Queue

from zhuican.enum import System

# import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'zsmrwhy83@kn3ota9^=oi--mdh7)_f@s$^y43ao1op-oh*v(uk'
SECRET_KEY = os.environ.get("SECRET_KEY", "".join(random.choice(string.printable) for i in range(40)))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = os.environ.get("DEBUG", False)

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'analysis',
    # 'channels',
    'reviews',
    'new_reviews',
    'recommend',
]

MIDDLEWARE = [
    'zhuican.middleware.MiddlewareException',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
]

ROOT_URLCONF = 'zhuican.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'zhuican.wsgi.application'

# CELERY STUFF
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
# CELERY_RESULT_BACKEND = 'redis://192.168.1.111:6379/0'
BROKER_URL = 'redis://localhost:6379/0'
# BROKER_URL = 'amqp://zhuican:zczx2012@localhost/zhuican'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TRACK_STARTED = True
CELERY_ACKS_LATE = True
CELERYD_MAX_TASKS_PER_CHILD = 1
CELERYD_PREFETCH_MULTIPLIER = 1
CELERY_TIMEZONE = 'Asia/Shanghai'
# CELERYD_REDIRECT_STDOUTS_LEVEL = 'INFO'

CELERY_QUEUES = [
    Queue('celery', Exchange('celery'), routing_key='celery', queue_arguments={'x-priority': 1}),
    Queue('high_memory', Exchange('high_memory'), routing_key='high_memory', queue_arguments={'x-priority': 5}),
    Queue('long_time', Exchange('long_time'), routing_key='long_time', queue_arguments={'x-priority': 10}),
    Queue('reviews', Exchange('reviews'), routing_key='reviews', queue_arguments={'x-priority': 8}),
]

CELERY_ROUTES = {
    # 'analysis.tasks.create_report_model_do': 'high_memory',
    'analysis.task_def.micro_data.micro_data_common_task_long': 'long_time',
    'reviews.tasks.*': 'reviews',
}

SYSTEM_TYPE = System.WINDOWS if platform.system() == 'Windows' else System.LINUX

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': "django.db.backends.postgresql_psycopg2",
        'NAME': "zhuican_web",
        'USER': 'zczx_write',
        'PASSWORD': 'zczxTech2012',
        'HOST': '192.168.1.99',
        'PORT': '5432',
    },
}

"""
DATABASES = {
    'default': {
        'ENGINE': "django.db.backends.postgresql_psycopg2",
        'NAME': "zhuican_web",
        'USER': 'zczx_admin',
        'PASSWORD': 'zczx112211',
        'HOST': 'postgres-lkr70ecv.gz.cdb.myqcloud.com',
        'PORT': '62',
    },
}
SOURCE_DATABASE = "99"

DATABASES = {
    'default': {
        'ENGINE': "django.db.backends.postgresql_psycopg2",
        'NAME': "zhuican_web",
        'USER': 'zczx_admin',
        'PASSWORD': 'zczx112211',
        'HOST': '10.66.214.113',
        'PORT': '5432',
    },
}
SOURCE_DATABASE = "tencent"
"""

#
# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "asgi_redis.RedisChannelLayer",
#         "CONFIG": {
#             "hosts": [os.environ.get('REDIS_URL', 'redis://localhost:6379')],
#         },
#         "ROUTING": "zhuican.routing.channel_routing",
#     },
# }


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/


STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    ("css", os.path.join(STATIC_ROOT, 'css')),
    ("js", os.path.join(STATIC_ROOT, 'js')),
    ("images", os.path.join(STATIC_ROOT, 'images')),
    ("fonts", os.path.join(STATIC_ROOT, 'fonts')),
    ("plugins", os.path.join(STATIC_ROOT, 'plugins')),
    ("resources", os.path.join(STATIC_ROOT, 'resources')),
)
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATIC_URL = '/static/'

# # Extra places for collectstatic to find static files.
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
# ]

SPARK_REDIS_HOST = "193.112.190.105"
SPARK_REDIS_PORT = 6379
SPARK_REDIS_PASS = "2sinxcosx+2cosxsinx"
SPARK_REDIS_DB = 2
SPARK_REDIS_KEY = "spark_micro_data"
# server = redis.Redis(REDIS_HOST, REDIS_PORT, REDIS_DB, REDIS_PASS)


AIRFLOW_API_SERVER = 'http://192.168.1.95:8080'

DB_99 = '192.168.1.99'
DB_99_PORT = 5432
DB_99_USERNAME = 'zczx_write'
DB_99_PASSWORD = 'zczxTech2012'

DB_REPORT_DG = '192.168.1.99'
DB_REPORT_DG_PORT = 5433
DB_REPORT_DG_USERNAME = 'zczx_write'
DB_REPORT_DG_PASSWORD = 'zczxTech2012'

DB_TENCENT = 'postgres-j0ricntx.sql.tencentcdb.com'
DB_TENCENT_PORT = 34831
DB_TENCENT_USERNAME = 'zczx_admin'
DB_TENCENT_PASSWORD = 'zczx112211'

DB_PACHONG = 'postgres-lkr70ecv.gz.cdb.myqcloud.com'
DB_PACHONG_PORT = 62
DB_PACHONG_USERNAME = 'zczx_admin'
DB_PACHONG_PASSWORD = 'zczx112211'

DB_COMMENT = 'postgres-jq4zka6d.sql.tencentcdb.com'
DB_COMMENT_PORT = 25876
DB_COMMENT_USERNAME = 'zczx_admin'
DB_COMMENT_PASSWORD = 'zczx112211'

DB_POOL_SIZE = 10

LOCAL = False

NLP_ROOT = '/home/nlp'

EMAIL_HOST = 'smtp.exmail.qq.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'zhongjie.chen@zhuican.net'
EMAIL_HOST_PASSWORD = 'Hccg8337'
EMAIL_USE_SSL = True

REDIS_CACHE_HOST = '192.168.1.111'
REDIS_CACHE_PORT = 6379
REDIS_CACHE_DB = '8'
